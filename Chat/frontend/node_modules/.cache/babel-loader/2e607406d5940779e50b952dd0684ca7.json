{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport userSlice from \"./features/userSlice\";\nimport appApi from \"./services/appApi\"; // persist our store\n\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport thunk from \"redux-thunk\"; // reducers\n\nconst reducer = combineReducers({\n  user: userSlice,\n  [appApi.reducerPath]: appApi.reducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blackList: [appApi.reducerPath]\n}; // persist our store\n\nconst persistedReducer = persistReducer(persistConfig, reducer); // creating the store\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk, appApi.middleware]\n});\nexport default store;","map":{"version":3,"sources":["D:/WebProjects/Chat/frontend/src/store.js"],"names":["configureStore","userSlice","appApi","storage","combineReducers","persistReducer","thunk","reducer","user","reducerPath","persistConfig","key","blackList","persistedReducer","store","middleware"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAGH,eAAe,CAAC;AAC5BI,EAAAA,IAAI,EAAEP,SADsB;AAE5B,GAACC,MAAM,CAACO,WAAR,GAAsBP,MAAM,CAACK;AAFD,CAAD,CAA/B;AAKA,MAAMG,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBR,EAAAA,OAFkB;AAGlBS,EAAAA,SAAS,EAAE,CAACV,MAAM,CAACO,WAAR;AAHO,CAAtB,C,CAMA;;AAEA,MAAMI,gBAAgB,GAAGR,cAAc,CAACK,aAAD,EAAgBH,OAAhB,CAAvC,C,CAEA;;AAEA,MAAMO,KAAK,GAAGd,cAAc,CAAC;AACzBO,EAAAA,OAAO,EAAEM,gBADgB;AAEzBE,EAAAA,UAAU,EAAE,CAACT,KAAD,EAAQJ,MAAM,CAACa,UAAf;AAFa,CAAD,CAA5B;AAKA,eAAeD,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport userSlice from \"./features/userSlice\";\nimport appApi from \"./services/appApi\";\n\n// persist our store\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\n\n// reducers\nconst reducer = combineReducers({\n    user: userSlice,\n    [appApi.reducerPath]: appApi.reducer,\n});\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    blackList: [appApi.reducerPath],\n};\n\n// persist our store\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\n// creating the store\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk, appApi.middleware],\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}